Diretivas São extensões da linguagem HTML que permitem a implementação de novos comportamentos,
de forma declarativa.

Diretivas
    ng-app=Define as fronteiras da aplicação
        Ao criar um ng-app eu sou obrigado a definir um módulo, caso contrário da erro na aplicação
    
    ng-controller 
        Ao criar um controller, temos que referencia-lo ao módulo e informar o controller
        {{}} = interpolação da expressão = caso exista erro assim pode ser impresso corretamente, enquanto que 
               com ng-bind não.

    ng-repeat 
        Itera sobre os itens de um array
        Ex.
        <tr ng-repeat="contato in contatos">
            <td>{{contato.nome}}</td>
            <td>{{contato.telefone}}</td>
        </tr>
    
    ngBind = Mostra os dados do $scope na tela(Pega algo do $scope e exibe)
    ngModel = Inverso do ngBind Ele vincula uma propriedade ao $scope(Pega algo da view e define no $scope)
        usa-se nos inputs, selects e text-area
    
    Two Way Databind
        O framework percorre todas os elementos que tenham diretivas na inicialização. Quando ele acha uma diretiva
        do tipo ngmodel, ele  começa a escutar para que sempre que você apertar uma tecla, ele faça duas coisas, ele define
        isso e atualiza em $scope ele dispara o ciclo de notificação, que alguns tipos de diretivas estão escutando, ex: ng-bind
        ou interpolação da expressão, ng-repeat. Ou seja, essas diretivas recebem esse aviso e exibem a informação atualizada.

    ngclick
        Atribui um comportamento ao evento
        Evite ao máximo ler o $scope estando dentro do controle.
        Continuar a aula 2 a partir de 24 minutos
        - Para abrir um two way databind,basta usar o método copy na hora de carregar o array
            $scope.contatos.push(angular.copy(contato));
    
    ngDisable 
        Habilita ou desabilita os botões de acordo com o preenchimento.
        ng-disabled="!contato.nome || !contato.telefone" //Caso true desabilita
        Obs.: Para campos obrigatórios utilizar a diretiva ngRequired

    ngOptions
        Renderiza as opções de um select(ngRepeat não pega o objeto selecionado)
        Ex.
        <select class="form-control" ng-model="contato.operadora" ng-options="operadora.nome for operadora in operadoras">
                    <option value="">Selecione uma Operadora</option>
        </select>
        Detalhamento:
            O ng-model="contato.operadora" cria uma referência de operadora em contato
            Enquanto o laço "operadora.nome for operadora in operadoras" variável operadora no objeto operadoras
            retorna o operadora.nome
            No angular a interpolação da expressão perdoa valores null e undefined não os exibindo
            Uma outra opção para o select seria 
            <select class="form-control" ng-model="contato.operadora" ng-options="operadora.nome group by operadora.categoria for operadora in operadoras">
                    <option value="">Selecione uma Operadora</option>
            Os parâmetros operadora.categoria Agrupam por categoria os itens e renderizam na tela.

    ngClass e ngStyle
        Aplicando classes e estilos dinamicamente
        <tr ng-class="{selecionado :contato.selecionado, negrito:contato.selecionado}" ng-repeat="contato in contatos">
                        <!--Lembrar em js null undefined vazio e falso é evaluado para falso -->
                        <!--Lembrar disso para ajustar o codigo -->
                        <td><input type="checkbox" ng-model="contato.selecionado"/></td>
                        <td>{{contato.nome}}</td>
                        <td>{{contato.telefone}}</td>
                        <td>{{contato.operadora.nome}}</td>
                    </tr>
        O ng-class aplica 2 estilos chamados selecionado e negrito.
        em casos de string pode-se fazer um hack no js e ficaria assim ng-class="{'selecionado negrito' :contato.selecionado, :contato.selecionado}
        o ngstyle modifica o codigo js //não implementei o exemplo, porém era criar um atributo para modificacao de cor de maneira dinâmica

    ngShow, ngHide e ngIF
        Exibindo um elemento condificionalmente
        ng-show //mostra se alguma condição existir
            ng-show="isContatoSelecionado(contatos);"
        ng-hide //oculta se alguma condição existir
            ng-hide="!isContatoSelecionado(contatos);"
        o ng-show e ng-hide trabalham apenas na visibilidade do elemento, eles apenas manipulam a dom colocando 
        uma div para executar um display:none

        o ng-if interage com a dom removendo o elemento 

    ng-include 
        inclui conteúdo dinamicamente
        Para incluir um rodapé
    
    Validação de Formulários
        tem que ser colocado dentro de um form
        ng-required define um determinado campo como obrigatório
            após habilitar o ngRequired eu tenho acesso ao $valid e $invalid de um Formulários
            $valid e $invalid = Consulta a validade de um campo ou formulário
            $pristine e dirty = Verifica se um formulário ou campo já foi utilizado alguma vez.
        ng-minlength e ng-maxlength define o tamanho máximo e mínimo permitido
            - (não é uma mascara, apenas uma validação)  
        $error
            - Consultando os erros de um campo ou formulário
        ngPattern
            - Define uma RegExp para validar o campo 

        //Essa lib ngMessages ela é externa ao angularjs, tendo que inserir os valores
        ngMessages = Serve para melhoras a validações com menos erros de visibilidade
        Ex.
        <div ng-messages="contatoForm.nome.$error" class="alert alert-danger">
            <div ng-message="required">
                Por favor, preencha o campo nome!
            </div>

            <div ng-message="minlength">
                O campo nome deve ter no mínimo 10 caracteres.
            </div>
        </div> <!--Fecha ng-messages do contatoForm.nome-->

    Filtros
        Os filtros nem sempre filtram. 
        Transformam o resultado de uma expressão, realizando operações como a 
        formatação de data, a conversão de moeda e a ordenação de array.
        i18n = Arquivo de localização que já vem disponível no arquivo que você baixa
               Formatando a moeda nos tipos desejados.
        
        Filtro uppercase / lowercase
        mesma idéia do unix ele aplica um filtro sem alterar os dados originais
        <tr ng-class="{'selecionado negrito' :contato.selecionado}" ng-repeat="contato in contatos">
                        <!--Lembrar em js null undefined vazio e falso é evaluado para falso -->
                        <!--Lembrar disso para ajustar o codigo -->
                        <td>{{contato.nome | uppercase}}</td>
        </tr>
        Filtro de Data
            //Entre '' é a mascara
            <td>{{contato.data | date:'dd/MM/yyyy HH:mm'}}</td>

        Filtro Filter 
            Filtra um array com base em um critério
            Normalmente usa-se para buscar
            Exemplo aplicado no ng-repeat
                ng-repeat="contato in contatos | filter:criteriodeBusca" o criteriodeBusca é ng-model
                Usando assim apenas para utilizar uma pesquisa por qualquer filtro
                Caso queira incluir uma pesquisa por um atributo especifico utiliza-se assim
                    ng-repeat="contato in contatos | filter:criteriodeBusca" o {nome:criteriodeBusca} é ng-model
            Filtro orderBy                    
                Ordena um array com base em um critério
                Exemplo
                ng-repeat="contato in contatos | filter:criteriodeBusca | orderBy:'nome'"
                Outro parâmetro 
                //Esse true indica ao filtro utilizar a ordem descendente e false a ordem ascendente
                //Sendo que false já é o padrão
                ng-repeat="contato in contatos | filter:criteriodeBusca | orderBy:'nome':true"
            Filtro currency
                Converte um número para uma moeda
                Importação do arquivo i18n de localização(ptbr)
                Ex.:
                ng-options="operadora.nome +' ( '+(operadora.preco | currency) +' ) ' for operadora in operadoras | orderBy:'nome'"

            Filtro number
                Formata um número 
                O number:1 // é o fraction size, número da fração
                Ex.: {{100.96 | number:1}} //Arredonda com  1 casa
            
            Filtro limitTo
                Limita um array ou uma String
                No exemplo abaixo eu limitei em 3 caracteres o campo nome do contato
                Ex.:
                <td>{{contato.nome | uppercase | limitTo:3}}</td>

                COM RELAÇÃO AOS FILTROS TOMAR CUIDADO EM SUA APLICAÇÃO NA VIEW DEVIDO A PERFORMANCE
                SÃO MUITAS AÇÕES QUE A FRAMEWORK TOMA AO UTILIZAR A VIEW
                OS FILTROS APLICADOS EM TELA ELES SÃO SEMPRE REAVALIADOS
                  - Profiling em chrome batarang 

                Pensando em performance (dentro do possível )é melhor aplicar filtros nos controles.
                Exemplo 1
                    Insira após o o $scope o parâmetro $filter
                    {nome:$filter('uppercase')("Pedro"), telefone:"99998888", data: new Date(), operadora:{nome:"Oi",codigo:"14",categoria:"Celular"}},
                Exemplo 2                     
                    Insira após o o $scope o parâmetro uppercaseFilter
                    //o uppercasefilter é uma function
                    {nome:uppercaseFilter("Pedro"), telefone:"99998888", data: new Date(), operadora:{nome:"Oi",codigo:"14",categoria:"Celular"}},

    Integração com BackEnd
                $http = O serviço http do Angular, permite a realização de requisições utilizando
                XMLHttpRequest via JSONP
                    -get(url,config)
                    -post(url,data,config)
                    -put(url,data,config)
                    -delete(url,config) 
                    -head(url,config)
                    -jsonp(url,config)

                - Exclui a lista criada através do array de contatos
                - injeta o http
                Ex.:
                    var carragarContatos = function(){
                    $http.get("").success(function(data,status){
                        $scope.contatos = data;                        
                                        });
                    };


                Continuar de 20 minutos -- verificar inicialmente se existe um serviço
                para utilização da lista de contatos nos comentários do youtube.
                A aplicação está dando erro devido a criação dos contatos




                Continuar na aula 6 aos 15:20












